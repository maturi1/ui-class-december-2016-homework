Homework 7:
1.	What is the difference b/w id, class, attribute, tagname selectors when to use them?
The id selector uses the id attribute of an HTML element to select a specific element.
Prepend # in css selector id. When we have to select only one element then use id selector
#Idname{
Css properties
}
The class selector selects elements with a specific class attribute.
Prepend . in css selector class. Use class selector whenever we want to select multiple elements within the same class.
Same element can have multiple clases.
.classname{
Css properties
}
Tagname selects the css element using their tagname.  Use it to select multiple elements with same tag name.
Syntax: tagname{
Css properties
}
Attribute: by attribute we select element. Select multiple elements based on attribute.
[attributeName]{
Css properties
}
2.	What is css specificity?
Specificity is applied to the css declaration, determined by the number of each selector type in the matching selector. When specificity is equal to any of the multiple declarations, the last declaration found in the CSS is applied to the element. Specificity only applies when the same element is targeted by multiple declarations.

3.	Css selectors explain with examples?
CSS selectors are used to find HTML elements based on their element name, id, class, attribute, and more.
The element selector selects elements based on the element name.
The id selector uses the id attribute of an HTML element to select a specific element.
Prepend # in css selector id. When we have to select only one element then use id selector
#Idname{
Css properties
}
The class selector selects elements with a specific class attribute.
Prepend . in css selector class. Use class selector whenever we want to select multiple elements within the same class.
Same element can have multiple clases.
.classname{
Css properties
}
Tagname selects the css element using their tagname.  Use it to select multiple elements with same tag name.
Syntax: tagname{
Css properties
}
Attribute: by attribute we select element. Select multiple elements based on attribute.
[attributeName]{
Css properties
}

4.	Css properties?
Css properties will have name and value.
We use colon between name and value.
After the value we have semicolon; we can apply multiple properties on same element.
Property name : property value;

5.	Descendent selectors?
The descendant combinator — typically represented by a single space ( ) character — combines two selectors such that elements matched by the second selector are selected if they have an ancestor element matching the first selector. Selectors that utilize a descendant combinator are called descendant selectors.
Syntax: selector1 >> selector2 { /* property declarations */ }

6.	Child selector in css?
The > combinator separates two selectors and matches only those elements matched by the second selector that are direct children of elements matched by the first.
Syntax: selector1 > selector2 { style properties }

7.	Adjacent sibling selector in css?
This is referred to as an adjacent selector or next-sibling selector. It will select only the specified element that immediately follows the former specified element.
Syntax: former_element + target_element { style properties }

8.	Multiple selector in css? Using comma(,)?

9.	Variations in attribute based selector?

[attr]
Represents an element with an attribute name of attr.
[attr=value]
Represents an element with an attribute name of attr and whose value is exactly "value".
[attr~=value]
Represents an element with an attribute name of attr whose value is a whitespace-separated list of words, one of which is exactly "value".
[attr|=value]
Represents an element with an attribute name of attr. Its value can be exactly “value” or can begin with “value” immediately followed by “-” (U+002D). It can be used for language subcode matches.
[attr^=value]
Represents an element with an attribute name of attr and whose first value is prefixed by "value".
[attr$=value]
Represents an element with an attribute name of attr and whose last value is suffixed by "value".
[attr*=value]
Represents an element with an attribute name of attr and whose value contains at least one occurrence of string "value" as substring.
[attr operator value i]
Adding an i (or I) before the closing bracket causes the value to be compared case-insensitively (for characters within the ASCII range).
